{"version":3,"sources":["img/photo_other.jpg","img/photo.jpg","data/store.js","data/reducers/signUpReducer.js","data/reducers/loginReducer.js","data/reducers/session.js","data/reducers/message.js","history/history.js","sdk/init.js","utils/token.js","decorators/seferender.js","component/common/tooltip/index.js","component/sign/SignBasic.js","component/common/dialog/index.js","component/sign/Login.js","data/actions/loginAction.js","data/actions/actionCreator.js","data/actions/signUpAction.js","component/sign/Signup.js","component/common/icon/index.js","component/chat/sliderBar/index.js","data/actions/session.js","utils/event.js","data/actions/message.js","component/common/avator/index.js","component/chat/bubblePanel/index.js","component/chat/sessionList/index.js","component/chat/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","reducers","combineReducers","signUp","initState","arguments","length","undefined","status","action","type","Object","assign","payload","login","currentSession","session","allFriend","toConsumableArray","message","to","msgList","currentMsg","msg","list","push","addTextMsg","middlewares","thunk","store","applyMiddleware","apply","createStore","history","createHashHistory","conn","WebIM","connection","isMultiLoginSessions","config","https","url","xmppURL","heartBeatWait","autoReconnectNumMax","autoReconnectInterval","apiUrl","apiURL","isHttpDNS","isWindowSDK","isAutoLogin","encrypt","delivery","token","getToken","d","SignBasic","active","errorHandler","e","alert","displayName","method","target","forEach","blankFn","unsafe","prototype","report","console","log","call","this","name","stack","state","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","hint","header","button","account","footer","aLink","showNickName","userName","password","nickName","_this2","setState","changeInput","event","value","trim","handleSubmit","ev","preventDefault","handleSignUp","handleLogin","react_default","a","createElement","className","href","Link","placeholder","autoFocus","onChange","onClick","Component","Tooltip","_this$props","content","concat","defaultProps","time","timer","close","ReactDOM","unmountComponentAtNode","parentNode","removeChild","container","tooltip","show","document","body","appendChild","render","tooltip_Tooltip","clearTimeout","setTimeout","Login","connect","loginToServer","options","dispatch","getState","Promise","resolve","reject","success","error","err","sdk","open","data","user","pwd","appKey","appkey","then","sign_SignBasic","actionCreator","_len","key","Array","_key","_len2","_key2","item","index","signUpAction","SignUp","signUpToServer","onSuccess","onError","registerUser","username","toLowerCase","nickname","Icon","classNames","classnames","defineProperty","iconfont","Dialog","closeDialog","onClose","title","showMask","icon","common_dialog","dialog_Dialog","SlideBar","showAddFriend","dialog","ref","nickNameRef","confirmAddFriend","subscribe","tokenUser","src","require","alt","currentSessionActon","fetchAllFriendAction","fetchAllFriend","getRoster","response","myFriends","filter","subscription","utils_event","EventEmitter","addTextMsgAaction","addTextMsgAndChangeFriendList","who","from","newAllFriend","map","newItem","objectSpread","newMsg","chat_bubblePanel","chatType","id","getUniqueId","set","roomType","serverMsgId","fromMe","fail","send","BubblePanel","aloneMessage","handleUserInput","sendMessage","_this2$props","getAloneMessage","_this2$props2","mainRef","scrollTop","scrollHeight","_this3","bubblePanel_MessageItemErrorWrapper","cols","rows","MessageItemErrorWrapper","_this4","hasError","info","bubblePanel_MessageItem","MessageItem","mi_item","you","me","SessionList","eventEmitter","on","handlePresence","removeListener","bind","accept","subscribed","unsubscribed","chatId","isSelected","sessionList_SessionItem","friend","SessionItem","itemClick","_this$props2","nextProps","nextState","shallowequal","pathname","friendName","Chat","init","listen","onOpened","onTextMessage","onRoster","onPresence","emit","_Object$assign","location","chat_sliderBar","chat_sessionList","window","Home","App","es","HashRouter","Route","path","component","Signup","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","App_App","getElementById","URL","process","origin","addEventListener","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.74b69817.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo_other.1969756e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photo.1fa99390.jpg\";","import { createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { signUpReducer } from './reducers/signUpReducer' \r\nimport { loginReducer } from './reducers/loginReducer'\r\nimport { currentSessionReducer } from './reducers/session'\r\nimport { messageReducer } from './reducers/message'\r\n\r\nconst reducers = combineReducers({\r\n    signUp: signUpReducer,\r\n    login: loginReducer,\r\n    currentSession: currentSessionReducer,\r\n    message: messageReducer\r\n})\r\n\r\nconst middlewares = [thunk]\r\n// const store = createStore(reducers, applyMiddleware(...middlewares))\r\nconst store = applyMiddleware(...middlewares)(createStore)(reducers)\r\n\r\nexport default store\r\n\r\n\r\n// const store = createStore(reducers, {}, applyMiddleware(...middlewares))\r\n// dispatch收到的参数是函数：\r\n// const loginToServer = (options)=>{\r\n//     return (dispatch, getState)=>{\r\n//         // 异步的操作\r\n//          return action对象\r\n//     }\r\n// }\r\n\r\n// 我怀疑中间件thunk把dispatch做了修改，如果传入的参数是函数，就执行它，并且把store上的方法传给它；\r\n// if (typeof action === 'function') {\r\n//     return action(dispatch, getState, extraArgument);\r\n//   }\r\n//   return next(action);\r\n// }\r\n\r\n// 最后执行store.dispatch(acton函数的结果，即普通action对象)\r\n\r\n","// 初始：0， 进行中：1， 成功：2，  失败：3\r\n\r\nconst signUpReducer = (initState={status: 0}, action)=>{\r\n    switch(action.type){\r\n        case 'SIGNUP':\r\n            return Object.assign({}, initState, {status: action.payload.status})\r\n        default:\r\n            return initState\r\n    }\r\n}\r\nexport { signUpReducer }","// 初始：0， 进行中：1， 成功：2，  失败：3\r\n\r\nconst loginReducer = (initState={status: 0}, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return Object.assign({}, initState, {status: action.payload.status})\r\n        default:\r\n            return initState\r\n    }\r\n}\r\nexport { loginReducer }","function currentSessionReducer(initState={\r\n    session: null,\r\n    allFriend: []\r\n}, action){\r\n    switch(action.type){\r\n        case 'CURRENT_SESSION':\r\n            return Object.assign({}, initState, {session: action.payload.session})\r\n        case 'FETCH_ALL_FRIEND':\r\n            return Object.assign({}, initState, {allFriend: [...action.payload.allFriend]})\r\n        default:\r\n            return initState\r\n    }\r\n}\r\n\r\nexport { currentSessionReducer }","// msgList = { 'zhang': [], 'wang': []}\r\n\r\nfunction messageReducer(initState={\r\n    msgList: {},\r\n    currentMsg: []\r\n}, action){\r\n    switch(action.type){\r\n        case 'ADD_TEXT_MSG':            \r\n            return Object.assign({}, initState, {msgList: addTextMsg(action.payload.to, action.payload.message, initState.msgList)})\r\n        case 'GET_ALONE_MSG':\r\n            return Object.assign({}, initState, {currentMsg: filterMsgList(action.payload.to, initState.msgList)})\r\n        default:\r\n            return initState\r\n    }\r\n}\r\n\r\nexport { messageReducer }\r\n\r\n\r\nfunction filterMsgList(to, msgList){\r\n    return msgList[to] ? [...msgList[to] ] : []\r\n}\r\n\r\nfunction addTextMsg(to, msg, msgList){\r\n    let list = msgList[to] || []\r\n    list.push(msg)\r\n    msgList[to] = list\r\n    return Object.assign({}, msgList)   //想要触发bubblePanel组件渲染，此处必须生成新的地址，原因未知\r\n}","import createHashHistory from 'history/createHashHistory';\r\nconst history = createHashHistory()\r\nexport default history","let conn = new WebIM.connection({\n    isMultiLoginSessions: WebIM.config.isMultiLoginSessions,\n    https: false,\n    url: WebIM.config.xmppURL,\n    heartBeatWait: WebIM.config.heartBeatWait,\n    autoReconnectNumMax: WebIM.config.autoReconnectNumMax,\n    autoReconnectInterval: WebIM.config.autoReconnectInterval,\n    apiUrl: WebIM.config.apiURL,\n    isHttpDNS: WebIM.config.isHttpDNS,\n    isWindowSDK: WebIM.config.isWindowSDK,\n    isAutoLogin: true,\n    encrypt: WebIM.config.encrypt,\n    delivery: WebIM.config.delivery\n});\n\nexport default conn","let token = null\r\nconst getToken = ()=>{\r\n    return token\r\n}\r\nconst setToken = (newToken)=>{\r\n    return token = newToken\r\n}\r\nexport {getToken, setToken}\r\n\r\n\r\n// !function xx(){\r\n//     let token = 100\r\n//     return {\r\n//         get: ()=>{},\r\n//         set: ()=>{}\r\n//     }\r\n// }()","export default function safeRender(config){\r\n    return function(target){ \r\n        if(config.active){\r\n            [\r\n                'render',\r\n                'componentWillMount',\r\n                'componentDidMount',\r\n                'componentWillReceiveProps',\r\n                'componentWillUpdate',\r\n                'componentDidUpdate',\r\n                'compoentnWillUnmount',\r\n                'shouldComponentUpdate'\r\n            ].forEach((method)=>{\r\n                let blankFn =  method === 'shouldComponentUpdate' ? ()=>{return true} : ()=>{return null}\r\n                let unsafe = target.prototype[method] || blankFn    // 原来的方法  \r\n                config.errorHandler = config.errorHandler || function(report){\r\n                    console.log(report)\r\n                }             \r\n\r\n                target.prototype[method] = function(){              // 修改原方法\r\n                    try{\r\n                        return unsafe.call(this, arguments)\r\n                    }catch(e){\r\n                        let report = {\r\n                            displayName: target.name,   // 组件名\r\n                            method: method,             // 方法名\r\n                            message: e.stack,           // 出了什么问题？\r\n                            state: this.state,\r\n                            props: this.props\r\n                        }\r\n                        config.errorHandler(report)\r\n                        return blankFn.call(this, arguments)    // shouldComponentUpdate 和 render 函数在报错的时候也应该有返回值\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    \r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\n// tooltip样式 48分钟\r\nclass Tooltip extends Component{\r\n    static defaultProps = {\r\n        time: 3000,         //3s自动消失\r\n        type: 'success',    //默认成功的样式\r\n        content: ''         // 显示的内容\r\n    }\r\n    render(){\r\n        // 视频2 36分钟 添加类\r\n        let {type, content} = this.props\r\n        return (\r\n            <div className=\"tooltips\">\r\n                <div>{`${type}: ${content}`}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet d\r\nlet timer = null\r\nfunction show(props){\r\n    if(d){\r\n        close()\r\n    }\r\n    d = document.createElement('div')\r\n    document.body.appendChild(d)\r\n    ReactDOM.render(<Tooltip {...props} />, d)\r\n\r\n    timer && clearTimeout(timer)\r\n    timer = setTimeout(() => {\r\n        close()\r\n    }, props.time || 3000);\r\n}\r\nfunction close(){\r\n    if(d){\r\n        ReactDOM.unmountComponentAtNode(d)\r\n        d.parentNode.removeChild(d)\r\n        d = null\r\n    }\r\n}\r\n\r\nconst tooltip = {show, close}\r\n\r\nexport default tooltip","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom' \r\nimport safeRender from '../../decorators/seferender'\r\nimport './signBasic.css'\r\n\r\n@safeRender({\r\n    active: true,\r\n    errorHandler: function(e){\r\n        alert(e.displayName + \"----\" + e.method)\r\n    }\r\n})\r\n\r\n\r\nclass SignBasic extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hint: {\r\n                header: '',\r\n                button: '',\r\n                account: '',\r\n                footer: '',\r\n                aLink: '',\r\n                showNickName: false\r\n            },\r\n            userName: '',\r\n            password: '',\r\n            nickName: ''\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.props.hint===\"signUp\" ? \r\n        this.setState({ hint: {header: '注册', button: '注册', account: '已有账户', footer: '立即登录', aLink: '/login',  showNickName: true } }) :             \r\n        this.setState({ hint: {header: '登录', button: '登录', account: '没有账户', footer: '立即注册', aLink: '/signUp', showNickName: false} })\r\n\r\n        this.changeInput = (event)=>{\r\n            switch(event.target.name){\r\n                case 'userName':\r\n                    return  this.setState({userName: event.target.value})\r\n                case 'password':\r\n                    return  this.setState({password: event.target.value.trim()})\r\n                case 'nickName':\r\n                    return  this.setState({nickName: event.target.value})\r\n                default:\r\n                    return \r\n            }\r\n        }\r\n\r\n        this.handleSubmit = (ev)=>{\r\n            ev.preventDefault()\r\n            this.props.hint===\"signUp\" ? \r\n            this.props.handleSignUp(this.state) : \r\n            this.props.handleLogin(this.state)\r\n        }\r\n    } \r\n    render(){\r\n        return (\r\n            <div className=\"signBasic\">\r\n                <header>\r\n                    <div className='header_inner'>\r\n                        <h1 className='logo'>\r\n                            <a href=\"#\">张治国 聊天小作品</a>\r\n                        </h1>\r\n                        <div className='signUpBtn'>\r\n                            <Link to={this.state.hint.aLink}>{this.state.hint.footer}</Link>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <div className='main_inner'>\r\n                        <form>\r\n                            <h3>{this.state.hint.header}</h3>\r\n                            <div className='row'>\r\n                                <i className=\"iconfont icon-photo\"></i>\r\n                                <input type=\"text\" name=\"userName\" placeholder=\"用户名\" className=\"input\"\r\n                                    autoFocus\r\n                                    value={this.state.userName} \r\n                                    onChange={this.changeInput}\r\n                                />\r\n                            </div>\r\n                            <div className='row'>\r\n                                <i className=\"iconfont icon-clock\"></i>\r\n                                <input type=\"password\" name=\"password\" placeholder=\"密码\" className=\"input\"\r\n                                    value={this.state.password} \r\n                                    onChange={this.changeInput}\r\n                                />\r\n                            </div>\r\n\r\n                            {this.state.hint.showNickName ? \r\n                                <div className='row'>\r\n                                    <i className=\"iconfont icon-photo\"></i>\r\n                                    <input type=\"nickName\" name=\"nickName\" placeholder=\"输入昵称\" className=\"input\"\r\n                                        value={this.state.nickName} \r\n                                        onChange={this.changeInput}\r\n                                    /> \r\n                                </div>\r\n                            : null}\r\n                                \r\n                            <div className='button_wrapper'>\r\n                                <input type=\"submit\" name=\"submit\" className=\"button\"\r\n                                    value={this.state.hint.button}\r\n                                    onClick={this.handleSubmit}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SignBasic","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Icon from '../icon/index'\r\nimport './index.css'\r\n\r\nclass Dialog extends Component{\r\n    static defaultProps = {\r\n      showMask: true\r\n    }\r\n    componentWillMount(){\r\n        this.closeDialog = ()=>{\r\n            close()\r\n            this.props.onClose && this.props.onClose()    //执行callback，前提是存在 \r\n        }\r\n    }\r\n\r\n    render(){\r\n        let {title, content, footer, showMask} = this.props       \r\n        return (\r\n            <div className='dlg_wrapper'>\r\n                {showMask ? \r\n                    <div className='dlg_mask' /> : \r\n                null}\r\n                <div className='dlg'>\r\n                    <div className='dlg_closeBtn' onClick={this.closeDialog}>\r\n                        <Icon type='guanbi' />\r\n                    </div>\r\n                    <div className='dlg_header'>{title}</div>\r\n                    <div className='dlg_main'>{content}</div>\r\n                    <div className='dlg_footer'>{footer}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet container\r\nfunction show(props){\r\n    container && close()\r\n    if(container){\r\n        close()\r\n    }\r\n    container = document.createElement('div')\r\n    document.body.appendChild(container)\r\n    ReactDOM.render(<Dialog {...props}/>, container)\r\n}\r\n\r\nfunction close(){\r\n    if(container){\r\n        ReactDOM.unmountComponentAtNode(container)\r\n        container.parentNode.removeChild(container)\r\n        container = null\r\n    }\r\n}\r\n\r\n\r\nexport default {show, close}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loginToServer} from '../../data/actions/loginAction'\r\nimport SignBasic from './SignBasic'\r\nimport tooltip from '../../component/common/tooltip/index'\r\nimport history from '../../history/history'\r\nimport {setToken} from '../../utils/token'\r\n\r\n// zhangzhiguo2580\r\n@connect(\r\n    (state)=>{return {status: state.login.status}},\r\n    {loginToServer: loginToServer}\r\n)\r\nclass Login extends Component{\r\n    componentWillMount(){\r\n        this.handleLogin = (data)=>{\r\n            // console.log('点击登录')\r\n            if(!data.userName || !data.password){\r\n                tooltip.show({\r\n                    type: 'error',\r\n                    content: '账号密码不能为空'\r\n                })\r\n                return \r\n            }\r\n            let options = { \r\n                user: data.userName.trim(),\r\n                pwd: data.password,\r\n                appKey: WebIM.config.appkey,\r\n                apiUrl: WebIM.config.apiURL,\r\n            }\r\n            \r\n            this.props.loginToServer(options).then(\r\n                (token)=>{\r\n                    setToken(token)\r\n                    history.push('/chat')\r\n\r\n                },\r\n                (err)=>{\r\n                    tooltip.show({\r\n                        type: 'error',\r\n                        content: '登录失败了'\r\n                    })\r\n                }\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <SignBasic hint=\"login\" handleLogin={this.handleLogin} status={this.props.status}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login ","// import sdk from '../../sdk/init'\r\n// import actionCreator  from './actionCreator'\r\n\r\n// const loginAction = actionCreator('LOGIN', 'status') \r\n\r\nconst loginToServer = (options)=>{\r\n    return (dispatch, getState)=>{\r\n        return new Promise((resolve, reject)=>{\r\n            options.success = (token)=>{\r\n                resolve(token)\r\n            }\r\n            options.error = (err)=>{ \r\n                reject(err)\r\n            }\r\n            sdk.conn.open(options) \r\n        })\r\n    }\r\n}\r\n\r\nexport { loginToServer }\r\n\r\n// const loginToServer = (options)=>{\r\n//     return (dispatch, getState)=>{\r\n//         let startTime = Date.now()\r\n//         setTimeout(()=>{\r\n//             dispatch({\r\n//                 type: 'LOGIN',\r\n//                 payload: {\r\n//                     status: 100\r\n//                 }\r\n//             })\r\n//             console.log(Date.now() - startTime)\r\n//         }, 2000)\r\n//     }\r\n// }","// key = ['name', 'age', 'sex']\r\n// value = ['zhang', 18, 'nan']\r\nconst actionCreator = (type, ...key)=>{\r\n    return (...value)=>{\r\n        let action = { type: type, payload: {} }\r\n        key.forEach((item, index)=>{\r\n            action.payload[key[index]] = value[index]\r\n        })\r\n        return action\r\n    }\r\n}\r\n\r\nexport default actionCreator\r\n","\r\nimport actionCreator  from './actionCreator'\r\nconst signUpAction = actionCreator('SIGNUP', 'status') \r\n\r\nconst signUpToServer = (options)=>{\r\n    return (dispatch, getState)=>{\r\n        return new Promise((resolve, reject)=>{\r\n            let onSuccess = options.success\r\n            let onError = options.error\r\n            options.success = ()=>{\r\n                dispatch(signUpAction(2))\r\n                onSuccess && onSuccess() \r\n                resolve()\r\n            }\r\n            options.error = ()=>{\r\n                dispatch(signUpAction(3))\r\n                onError && onError()    \r\n                reject()\r\n            }\r\n            sdk.conn.registerUser(options) \r\n        })\r\n    }\r\n}\r\nexport { signUpToServer }","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signUpToServer} from '../../data/actions/signUpAction'\r\nimport SignBasic from './SignBasic'\r\nimport tooltip from '../../component/common/tooltip/index'\r\nimport history from '../../history/history'\r\n\r\n\r\n@connect(\r\n    (state)=>{return {status: state.signUp.status}},\r\n    {signUpToServer: signUpToServer}\r\n)\r\nclass SignUp extends Component{\r\n    componentWillMount(){\r\n        this.handleSignUp = (data)=>{\r\n            if(!data.userName || !data.password || !data.nickName){\r\n                tooltip.show({\r\n                    type: 'error',\r\n                    content: '账号密码不能为空'\r\n                })\r\n                return \r\n            }\r\n            let options = { \r\n                username: data.userName.trim().toLowerCase(),\r\n                password: data.password,\r\n                nickname: data.nickName,\r\n                appKey: WebIM.config.appkey,\r\n                apiUrl: WebIM.config.apiURL,\r\n            }\r\n            this.props.signUpToServer(options).then(\r\n                ()=>{\r\n                    console.log('注册成功')\r\n                    history.push('/login')\r\n                },\r\n                ()=>{\r\n                    console.log('注册失败')\r\n                    tooltip.show({\r\n                        content: '注册失败了',\r\n                        type: 'error'\r\n                    })\r\n                }\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <SignBasic hint=\"signUp\" handleSignUp={this.handleSignUp} status={this.props.status}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp ","import React, { Component } from 'react'\r\nimport classnames from 'classnames'\r\n\r\nclass Icon extends Component{\r\n    render(){\r\n        let {type} = this.props\r\n        let classNames = classnames({\r\n            'iconfont': true,\r\n            ['icon-' + type]: true\r\n        })\r\n        \r\n        return <span className={classNames}></span>\r\n    }\r\n}\r\n\r\nexport default Icon","import React, { Component } from 'react'\r\nimport {getToken} from '../../../utils/token'\r\nimport Icon from '../../common/icon/index'\r\nimport dialog from '../../common/dialog/index'\r\n\r\nimport './index.css'\r\n\r\nclass SlideBar extends Component{\r\n    componentWillMount(){\r\n        this.showAddFriend = ()=>{\r\n            dialog.show({\r\n                title: '添加好友',\r\n                content: <div className='sb_dlg_header_inner'>\r\n                            <input type=\"text\" placeholder='输入名字'\r\n                                ref = {(content)=>{this.nickNameRef = content}}\r\n                            />\r\n                        </div>,\r\n                footer: <div className='sb_dlg_footer_inner'>\r\n                            <div className=\"button\" onClick={this.confirmAddFriend}>确定</div>\r\n                        </div>\r\n            })\r\n        }\r\n        this.confirmAddFriend = ()=>{\r\n            sdk.conn.subscribe({\r\n                to: this.nickNameRef.value.trim(),\r\n                message: '你好，我是张治国，交个朋友呗！'\r\n            })\r\n            dialog.close()\r\n        }\r\n    }\r\n    render(){\r\n        let tokenUser = getToken()\r\n        let username = tokenUser ? tokenUser.user.username : ''\r\n        return (\r\n            <div className=\"sb\">\r\n                <div className='sb_header'>\r\n                    <div className=\"photo_wrapper avator\">\r\n                        <img src={require('../../../img/photo.jpg')} alt=\"\"/>\r\n                    </div>\r\n                    <p className='myNickName'>{username}</p>\r\n                </div>\r\n                <div className='sb_main'>\r\n                    <div className=\"icon_wrapper chat\">\r\n                        <i className=\"iconfont icon-chat\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className='sb_footer'>\r\n                    <dir className=\"icon_wrapper setting\" onClick={this.showAddFriend}>\r\n                        <i className=\"iconfont icon-shezhi\"></i>\r\n                    </dir>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SlideBar","import actionCreator  from './actionCreator'\r\n\r\nconst currentSessionActon = actionCreator('CURRENT_SESSION', 'session')\r\n\r\nconst fetchAllFriendAction = actionCreator('FETCH_ALL_FRIEND', 'allFriend')\r\n\r\n\r\nfunction fetchAllFriend(){           // 找到互为好友的人\r\n    return (dispatch, getState)=>{\r\n        return new Promise((resolve, reject)=>{\r\n            sdk.conn.getRoster({\r\n                success: (response)=>{     \r\n                    let myFriends = response.filter((item)=>{\r\n                        return item.subscription === 'both'\r\n                    })\r\n                    dispatch(fetchAllFriendAction(myFriends))\r\n                    resolve()\r\n                },\r\n                error: (err)=>{\r\n                    reject()\r\n                }\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// 来到消息就执行该函数\r\n// 接收到一条消息，可能是我发送的，也可能是好友发送的\r\n// 遍历好友数组，假设消息的发送者是好友AAA，就给它添加newMsg属性，属性值就是他发送的那一条消息\r\n// 在好友列表那个组件里，判断是否有newMsg属性，有的话就当做预览展示出来\r\nfunction changeFriendListWithMsg(msg){\r\n    return (dispatch, getState)=>{\r\n        let name = msg.from   // 消息的发送者\r\n        let allFriend = getState().currentSession.allFriend     //所有好友\r\n        let newAllFriend = allFriend.map((item)=>{      // 新的好友列表\r\n            let newItem = {...item}\r\n            if(newItem.name === name){\r\n                newItem.newMsg = msg\r\n            }\r\n            return newItem\r\n        })\r\n        dispatch(fetchAllFriendAction(newAllFriend))\r\n    }\r\n}\r\n\r\nexport { fetchAllFriend, currentSessionActon, changeFriendListWithMsg }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const signUpAction = actionCreator('SIGNUP', 'status') \r\n\r\n// const signUpToServer = (options)=>{\r\n//     return (dispatch, getState)=>{\r\n//         return new Promise((resolve, reject)=>{\r\n//             let onSuccess = options.success\r\n//             let onError = options.error\r\n//             options.success = ()=>{\r\n//                 dispatch(signUpAction(2))\r\n//                 onSuccess && onSuccess() \r\n//                 resolve()\r\n//             }\r\n//             options.error = ()=>{\r\n//                 dispatch(signUpAction(3))\r\n//                 onError && onError()    \r\n//                 reject()\r\n//             }\r\n//             sdk.conn.registerUser(options) \r\n//         })\r\n//     }\r\n// }\r\n// export { signUpToServer }","import EventEmitter from 'eventemitter3'\r\n\r\nexport default new EventEmitter()","import actionCreator  from './actionCreator'\r\nimport {getToken} from '../../utils/token'\r\nimport {fetchAllFriend, changeFriendListWithMsg} from './session'\r\nimport eventEmitter from '../../utils/event'\r\n\r\nconst addTextMsgAaction = actionCreator('ADD_TEXT_MSG', 'to', 'message')\r\n\r\n// const getAloneMsgAaction = actionCreator('GET_ALONE_MSG', 'message')\r\n\r\nfunction addTextMsgAndChangeFriendList(who, message){\r\n    return (dispatch, getState)=>{\r\n        dispatch(addTextMsgAaction(who, message))\r\n        changeFriendListWithMsg(message)(dispatch, getState)\r\n    }\r\n}\r\n\r\nfunction init(){\r\n    return (dispatch, getState)=>{\r\n        sdk.conn.listen({   \r\n            onOpened: ()=>{     //链接成功立即执行的回调函数\r\n                dispatch(fetchAllFriend())\r\n            },\r\n            onTextMessage: (message)=>{\r\n                console.log('收到一条消息')\r\n                message.value = message.value || message.data   // 做个兼容\r\n                addTextMsgAndChangeFriendList(message.from, message)(dispatch, getState)\r\n            },\r\n            onRoster: ()=>{     // 别人处理完我发送的关于“好友请求”的信息，执行此函数\r\n                dispatch(fetchAllFriend())\r\n            },\r\n            onPresence: (message)=>{   // 别人发来的关于“好友请求”的信息，执行此函数\r\n                // this.handlePresence(message)\r\n                eventEmitter.emit('presence', message)\r\n            }\r\n        }) \r\n    }\r\n}\r\n\r\n/* \r\n*   任务一：发送文本消息到服务器（此处服务器接收消息和好友接收消息是有区别的）\r\n*   任务二：保存此条消息到store\r\n*/\r\nfunction addTextMsg(to, message, chatType){\r\n    return (dispatch, getState)=>{\r\n        let name = getToken().user.nickname\r\n        let id = sdk.conn.getUniqueId();              \r\n        let msg = new WebIM.message('txt', id)\r\n        msg.set({\r\n            msg: message,                 \r\n            to: to,               \r\n            roomType: false,\r\n            success:(id, serverMsgId)=>{ \r\n                msg.fromMe = true   // 用来区分信息是发送还是接收\r\n                msg.from = name    // from：我的名字\r\n                addTextMsgAndChangeFriendList(to, msg)(dispatch, getState)\r\n            },\r\n            fail: (e)=>{\r\n                alert('消息到服务器失败')\r\n            }\r\n        });\r\n        msg.body.chatType = chatType\r\n        sdk.conn.send(msg.body);\r\n    }\r\n}\r\n\r\n/* 获取to的聊天消息 */\r\nfunction getAloneMsg(){}\r\n\r\n/* 改变消息状态，页面动态更新气泡提示：如对方看到后显示已经看过，没看过时下方显示消息未读 */\r\nfunction changeMsgStatus(){}\r\n\r\n\r\nexport {init, addTextMsg, getAloneMsg, changeMsgStatus}\r\n","import React, {Component} from 'react'\r\nimport Icon from '../icon/index'\r\nimport './index.css'\r\n\r\nclass Avator extends Component{\r\n    render(){\r\n        return (\r\n            <div className='avator'>\r\n                <Icon type={this.props.type} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avator","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport {addTextMsg} from '../../../data/actions/message'\r\nimport Avator from '../../common/avator/index'\r\nimport './index.css'\r\n\r\n@connect(\r\n    (state)=>{return {\r\n        session: state.currentSession.session,      // sessionList组件中我选择的好友（我点击的Link）\r\n        msgList: state.message.msgList              // 所有好友所有信息\r\n    }},\r\n    {addTextMsg}\r\n)\r\nclass BubblePanel extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            message: '',\r\n            aloneMessage: ''\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.handleUserInput = (ev)=>{\r\n            this.setState({message: ev.target.value})\r\n        }\r\n        this.sendMessage = ()=>{\r\n            let {addTextMsg, session, chatType} = this.props\r\n            let {message} = this.state\r\n            this.setState({\r\n                message: ''\r\n            })\r\n            this.state.message.trim()!=='' && addTextMsg(session.name, message, chatType)\r\n        }\r\n        this.getAloneMessage = ()=>{\r\n            let {msgList, session} = this.props\r\n            // if(!session){\r\n            //     return []\r\n            // }\r\n            return msgList[session.name] || []\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        this.mainRef.scrollTop = this.mainRef.scrollHeight\r\n    }\r\n    render(){\r\n        let {session} = this.props\r\n        let aloneMessage = this.getAloneMessage()\r\n        return (\r\n            <div className='bp'>\r\n                <div className=\"bp_header\">\r\n                    {session ? session.name : ''}\r\n                </div>\r\n                <div className=\"bp_main\" ref={(content)=>{this.mainRef = content}}>\r\n                    <div className=\"timeHint\"></div>\r\n                    {\r\n                        aloneMessage.map((item)=>{\r\n                            return <MessageItemErrorWrapper key={item.id} msg={item} />\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"bp_footer\">\r\n                    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" placeholder='输入消息' className='textArea' \r\n                        value={this.state.message}\r\n                        onChange={this.handleUserInput} \r\n                    />\r\n                    <div className='sendButton' onClick={this.sendMessage}>发送</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BubblePanel\r\n\r\n\r\nclass MessageItemErrorWrapper extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(err, info){\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <div>出错了，请联系RD修复</div>\r\n        }\r\n        return <MessageItem msg={this.props.msg} />\r\n    }\r\n}\r\n\r\n\r\nclass MessageItem extends Component{\r\n    render(){\r\n        let {msg} = this.props\r\n        // 如何区分收到的还是发出的？在发出的对象上添加fromMe属性，有该属性就是我发出，没有该属性就是我收到\r\n        let fromMe = msg.fromMe ? true : false  \r\n        let mi_item = classnames({\r\n            'mi_item': true,\r\n            'you': !fromMe,\r\n            'me': fromMe\r\n        })      \r\n        return (\r\n            <div className={mi_item}>\r\n                <figure className='mi_photo'>\r\n                    <img src={require('../../../img/photo_other.jpg')} alt=\"头像\"/>\r\n                </figure>\r\n                <p className='mi_text'>\r\n                    {msg.value}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport dialog from '../../common/dialog/index'\r\nimport { Link } from 'react-router-dom' \r\nimport {connect} from 'react-redux'\r\nimport {currentSessionActon} from '../../../data/actions/session'\r\nimport Avator from '../../common/avator/index'\r\nimport eventEmitter from '../../../utils/event'\r\nimport shallowequal from 'shallowequal'\r\nimport './index.css'\r\n\r\n@connect(\r\n    (state)=>{return {allFriend: state.currentSession.allFriend}}\r\n)\r\nclass SessionList extends Component{\r\n    componentWillMount(){       \r\n        eventEmitter.on('presence', this.handlePresence)\r\n    }\r\n    componentWillUnmount(){\r\n        eventEmitter.removeListener('presence', this.handlePresence)\r\n    }\r\n    handlePresence(message){\r\n        // 信息类型是subscribe时，就是：“添加好友”\r\n        if (message.type === 'subscribe') {\r\n            dialog.show({\r\n                title: '好友申请',\r\n                content: <div>\r\n                            <div>{message.from}邀请你加为好友</div>\r\n                            <div>留言：{message.status}</div>\r\n                        </div>,\r\n                footer: <div>\r\n                            <button className='reject' onClick={this.reject.bind(this, message)}>拒绝</button>\r\n                            <button className='accept' onClick={this.accept.bind(this, message)}>同意</button>\r\n                        </div>\r\n            })\r\n        } \r\n    }\r\n    accept(message){\r\n        sdk.conn.subscribed({     \r\n            to: message.from,\r\n            message : '[resp:true]'\r\n        });\r\n        sdk.conn.subscribe({        //需要反向添加对方好友\r\n            to: message.from,\r\n            message : '[resp:true]'\r\n        });\r\n        dialog.close()\r\n    }\r\n    reject(message){\r\n        sdk.conn.unsubscribed({\r\n            to: message.from,\r\n            message : 'rejectAddFriend'\r\n        })\r\n        dialog.close()\r\n    }\r\n    render(){\r\n        let {chatId, allFriend} = this.props\r\n        return (\r\n            <div className=\"sessionList\">\r\n                <ul>{\r\n                    allFriend.length===0 ? null : allFriend.map((item)=>{\r\n                        let isSelected = chatId === item.name ? true : false\r\n                        return (\r\n                            <li key={item.name} className={isSelected ? 'list listActive' : 'list'}>\r\n                                <SessionItem  friend={item}/>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }</ul>\r\n\r\n                {/* {allFriend.length===0 ? null : allFriend.map((item)=>{   \r\n                    let isSelected = chatId === item.name ? true : false\r\n                    return <SessionItem key={item.name} friend={item} isSelected={isSelected}/>\r\n                })} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n@connect(\r\n    ()=>{return {}},\r\n    {currentSessionActon}\r\n)\r\nclass SessionItem extends Component{\r\n    componentWillMount(){\r\n        this.itemClick = ()=>{\r\n            let {currentSessionActon, friend} = this.props\r\n            currentSessionActon(friend)     //已经改造，connect函数自动dispatch\r\n        }  \r\n    }\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        // 问题点：以前好友A发一条消息，渲染四次，因为好友列表中有四个好友\r\n        // 改善：好友A发一条消息，只要好友A渲染（渲染目的是添加消息预览）,其他好友不渲染\r\n        // 当上一个好友对象和新的好友对象不同时，此函数返回true，进行渲染\r\n        // 为什么不同？因为如果是好友A发的消息，就会在A对象上添加newMsg属性，故而不同\r\n        // 附加：如果上一次点击的和这次点击的不同，返回true进行渲染，渲染两次（一个是去掉active, 一个是加上active） \r\n        return !shallowequal(this.props.friend, nextProps.friend) || !shallowequal(this.props.isSelected, nextProps.isSelected)\r\n    }\r\n    render(){      \r\n        let {friend} = this.props    \r\n        let url = {\r\n            pathname: `/chat/single/${friend.name}`,\r\n            state: {'chatType': 'single', 'friendName': `${friend.name}`}\r\n        }\r\n        // 点击Link链接，渲染chat页面（不重载），读取location信息，传给sessionList子组件\r\n        return (\r\n            <div className='sessionItem'>\r\n                <Link to={url} onClick={this.itemClick} >  \r\n                    <div className=\"sm_lf\">\r\n                        <img src={require('../../../img/photo_other.jpg')} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"sm_rt\">\r\n                        <h3>{friend.name}</h3>\r\n                        <p>{friend.newMsg ? friend.newMsg.value : ''}</p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SessionList","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport SlideBar from './sliderBar'\r\nimport BubblePanel from './bubblePanel'\r\nimport SessionList from './sessionList'\r\nimport {init} from '../../data/actions/message'\r\nimport './index.css'\r\n\r\n@connect(\r\n    ()=>({}),\r\n    {init}\r\n)\r\nclass Chat extends Component{\r\n    componentWillMount(){\r\n        this.props.init()\r\n    }\r\n    render(){    \r\n        // 点击Link链接，渲染chat页面（不重载），读取location信息，传给sessionList子组件，现在换了一种方式，此处没用上\r\n        let {chatType, friendName} = Object.assign({}, this.props.location.state)\r\n        return (\r\n            <div className=\"ctn-chat\">\r\n                <SlideBar />\r\n                <SessionList chatType={chatType} chatId={friendName}/>\r\n                {friendName ? <BubblePanel chatType={chatType} chatId={friendName} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat","import React, { Component } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport store from './data/store'\r\nimport history from './history/history'\r\nimport conn from './sdk/init'\r\nimport {getToken} from './utils/token'\r\nimport Login from './component/sign/Login'\r\nimport Signup from './component/sign/Signup'\r\nimport Chat from './component/chat/index'\r\nimport {HashRouter as Router, Route} from 'react-router-dom' \r\nimport './App.css'\r\n\r\n\r\n\r\nwindow.sdk = { conn: conn }\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        let token = getToken()\r\n        return (\r\n            <div>\r\n                {!token && \r\n                    history.location.pathname!=='/login' ? history.push('/login') : \r\n                null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class App extends Component{\r\n    render(){\r\n        return (\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <div className='app_Wrapper'>\r\n                        <Route path=\"/\" component={Home} />\r\n                        <Route path=\"/signUp\" component={Signup} />\r\n                        <Route path=\"/login\" component={Login} />\r\n                        <Route path=\"/chat\" component={Chat} /> \r\n                        {/* <Route path=\"/chat/:chatType/:chatId\" component={Chat} />  */}\r\n                    </div>\r\n                </Router>\r\n            </Provider>\r\n        )\r\n    }\r\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nregisterServiceWorker();\n"],"sourceRoot":""}